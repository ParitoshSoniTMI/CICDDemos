parameters:
- name: pythonVersion
  type: string
  default: "3.11"

steps:    
- task: UsePythonVersion@0
  displayName: 'Use Python ${{ parameters.pythonVersion }}'
  inputs:
    versionSpec: ${{ parameters.pythonVersion }}

- script: |
    python -m pip install --upgrade pip
    python -m pip install build
    pip install pytest-azurepipelines
    pip install ".[test]"
    pip install pyspark==3.5.0
  displayName: 'Install dependencies'

 - checkout: self
   clean: true
   fetchDepth: 1


- script: |
      git config --global user.email "$(Build.RequestedForEmail)"
      git config --global user.name "$(Build.RequestedFor)"
      git config pull.rebase true
      git checkout
      # Fetch all tags from the remote
      git fetch --tags
      # Get the latest tag
      git tag --sort=-v:refname | head -n 1
      latestTag=$(git tag --sort=-v:refname | head -n 1)
      # Output the last tag
      echo "The latest tag is: $latestTag"
      # Extract version numbers
      if [[ $latestTag =~ ([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
          major=${BASH_REMATCH[1]}
          minor=${BASH_REMATCH[2]}
          hotfix=${BASH_REMATCH[3]}
          # Increment the hotfix version
          newHotfix=$((hotfix + 1))
          newVersion="$major.$minor.$newHotfix"
      else
          echo "Failed to parse the latest tag: $latestTag" >&2
          exit 1
      fi
      echo "New version: $newVersion"
      # Update the version in pyproject.toml
      if [ -f "pyproject.toml" ]; then
          sed -i "s/^version = \"[0-9]\+\.[0-9]\+\.[0-9]\+\"/version = \"$newVersion\"/" pyproject.toml
          echo "Updated pyproject.toml with new version: $newVersion"
      else
          echo "pyproject.toml not found!" >&2
          exit 1
      fi
      # Commit and push changes
      git add pyproject.toml
      git commit -m "Bump version to $newVersion"
      git push
      # create new tag
      git tag $newVersion
      git push origin --tags
      # Output the new version for use in Azure DevOps
      echo "##vso[task.setvariable variable=newVersion;]$newVersion"
  displayName: 'Bump hotfix version'
